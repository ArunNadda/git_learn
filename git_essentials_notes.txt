## check settings
git config --list

##
git config --global user.name "ArunNadda"
git config --global user.email "arunnadda@gmail.com"
git config --global color.ui "auto"

## windows
git config --global core.editor "'c:/program files/.....'"

## check settings
git config --list




## understaning Git - basics
cd <dir>
git init
-- create file
git status

git add <filename>

git log

git log --oneline

##  git diff to check differece between file last known state and current state
git diff

git diff --staged ## check diff in files which is in staged area and production area


## look around
## HEAD - current snapshot of folder we are looking at
git diff HEAD~1
git diff HEAD~2

git log


git diff <versionID> ### diff is from current status of file



### revert back to earlier version -- git checkout
git diff
git checkout HEAD~1 README.md
## DACG -- this is how git saves data
git checkout master

git reset HEAD <file Name>



## reset file to last status
git reset --hard

## remove file from staging area
git reset -HEAD



##################################################################
## ignore things in git


## create new folders in original dir
## create .gitkeep file to force git to detect it



## .gitignore file, can be used to ignore files which are not required to be added for git versioning
## this file should be under mail dir where .git dir is there
## we can use patterns in .gitignore file.
## e.g. *.aux
##      *.pdf
##        etc


## if add a file which is ignored , use -f
git add -f nobel.pdf



#############################################################################
## Remote and branches

## github, bitbucket, gitlab


## use remotes with https
## use push and pull



git remote add origin https://github.com/ArunNadda/git_learn.git
anadda (master *) git_learn $ git remote -v
origin  https://github.com/ArunNadda/git_learn.git (fetch)
origin  https://github.com/ArunNadda/git_learn.git (push)
anadda (master *) git_learn $ git push

anadda (master *) git_learn $ git remote -v
origin  https://github.com/ArunNadda/git_learn.git (fetch)
origin  https://github.com/ArunNadda/git_learn.git (push)
anadda (master *) git_learn $ git push origin master
Counting objects: 25, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (22/22), done.
Writing objects: 100% (25/25), 2.87 KiB | 0 bytes/s, done.
Total 25 (delta 6), reused 0 (delta 0)
remote: Resolving deltas: 100% (6/6), done.
To https://github.com/ArunNadda/git_learn.git
 * [new branch]      master -> master
anadda (master *) git_learn $



##########################################################################
##use remote with ssh
##create ssh pub key files
## final configuration is done with ssh.
## delete https repository and then remove from laptop using
git remote remove origin


#########################################################################
resolving conflict if file is modified locally and remote both.

## use github for project management


#########################################################################
## use branches

anadda (master *) src $ git branch my_branch
anadda (master *) src $ git branch -a
* master
  my_branch
  remotes/origin/master
anadda (master *) src $
